name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with ruff
      run: |
        ruff check .
        ruff format . --check
    
    - name: Type check with mypy
      run: mypy job_application_assistant/ --ignore-missing-imports
    
    - name: Run installation test
      run: python test_installation.py
    
    - name: Run functionality test
      run: python test_functionality.py
    
    - name: Test CLI help
      run: python run_cli.py --help
    
    - name: Test CLI info
      run: python run_cli.py info

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Bandit Security Scan
      run: |
        pip install bandit
        bandit -r job_application_assistant/ -f json -o bandit-report.json
        
    - name: Run Safety Check
      run: |
        pip install safety
        safety check

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Test Docker build
      run: docker build -t job-application-assistant:test .
    
    - name: Test Docker run
      run: |
        docker run -d --name test-app -p 8501:8501 job-application-assistant:test
        sleep 10
        docker ps
        docker logs test-app
        docker stop test-app
        docker rm test-app
