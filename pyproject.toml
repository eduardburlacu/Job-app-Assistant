[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "job-application-assistant"
version = "1.0.0"
description = "AI-powered job application and interview preparation assistant - runs completely locally"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Eduard Burlacu", email = "eduardburlacu5@gmail.com"},
]
keywords = ["ai", "job-application", "interview-prep", "langchain", "ollama", "local-ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Operating System :: OS Independent",
]

dependencies = [
    "langchain>=0.1.0,<0.2.0",
    "langchain-ollama>=0.1.0,<0.2.0",
    "langgraph>=0.1.0,<0.2.0",
    "streamlit>=1.28.0,<2.0.0",
    "typer[all]>=0.9.0,<1.0.0",
    "rich>=13.0.0,<14.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    "requests>=2.31.0,<3.0.0",
    "beautifulsoup4>=4.12.0,<5.0.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.0.0",
    "httpx>=0.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0", 
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]

document-processing = [
    "pdfplumber>=0.9.0",
    "python-docx>=0.8.11",
    "docx2txt>=0.8",
]

[project.urls]
Homepage = "https://github.com/yourusername/job-application-assistant"
Repository = "https://github.com/yourusername/job-application-assistant"
Documentation = "https://github.com/yourusername/job-application-assistant/blob/main/README.md"
Issues = "https://github.com/yourusername/job-application-assistant/issues"
Changelog = "https://github.com/yourusername/job-application-assistant/blob/main/CHANGELOG.md"

[project.scripts]
job-assistant = "job_application_assistant.cli.main:app"
job-assistant-web = "run_web:main"

[tool.hatch.build.targets.wheel]
packages = ["job_application_assistant"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "typer.*",
    "rich.*",
    "pdfplumber.*",
    "docx2txt.*",
    "bs4.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["job_application_assistant"]
omit = [
    "tests/*",
    "setup.py",
    "conftest.py",
    "*/migrations/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_false_positives
